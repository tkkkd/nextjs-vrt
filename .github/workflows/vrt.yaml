name: VRT

on:
  # デプロイが成功した時に実行する。これにより、Preview Environment の URL に対して VRT を実行することができる
  deployment_status:

jobs:
  screenshots:
    # Preview Environment へのデプロイが成功した時に実行する
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success' && github.event.deployment_status.environment == 'Preview'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read

    # Playwright が提供する Docker イメージを使用することで、セットアップを簡単にする
    container:
      image: mcr.microsoft.com/playwright:v1.47.2-focal

    steps:
      - uses: actions/checkout@v4

      # 以下はpnpmや依存のセットアップなので説明は省略
      - uses: actions/setup-node@v3.5.1
        with:
          node-version-file: .node-version
      - uses: pnpm/action-setup@v2
        with:
          version: 8.9.2
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}-setup-pnpm
          restore-keys: |
            ${{ runner.os }}-pnpm-store-setup-pnpm
      - run: pnpm install
        shell: bash

      # 本番環境に対してスクリーンショットを撮る。このスクリーンショットが比較元となる
      - run: pnpm test:vrt:screenshots
        env:
          BASE_URL: https://nextjs-vrt.vercel.app/

      # デプロイが成功した Preview 環境に対してスクリーンショットを撮り、比較する
      - run: pnpm test:vrt:compare
        env:
          BASE_URL: ${{ github.event.deployment_status.environment_url }}

      # 失敗時に理由がわかるよう、失敗したスクリーンショットをアップロードする
      - name: Upload failed screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: vrt-failed-screenshots-${{ github.sha }}
          path: test-results
